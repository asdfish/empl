name: Build release

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        arch: [aarch64, x86_64]
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - arch: aarch64
            arch-kebab-case: aarch64
          - arch: x86_64
            arch-kebab-case: x86-64
          - os: macos-latest
            target-suffix: apple-darwin
          - os: ubuntu-latest
            target-suffix: unknown-linux-gnu
          - os: windows-latest
            target-suffix: pc-windows-msvc
            executable-suffix: '.exe'
    runs-on: ${{matrix.os}}
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: linux static alsa
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install gcc-${{matrix.arch-kebab-case}}-linux-gnu --yes

          # export CC=${{matrix.arch}}-linux-gnu-gcc

          export ALSA_VERSION=1.2.14

          wget https://github.com/alsa-project/alsa-lib/archive/refs/tags/v${ALSA_VERSION}.tar.gz
          tar -xvf v${ALSA_VERSION}.tar.gz

          cd alsa-lib-${ALSA_VERSION}

          libtoolize --force --copy --automake
          aclocal
          autoheader
          automake --foreign --copy --add-missing
          autoconf
          ./configure --enable-static=yes --enable-shared=no --host x86_64-unknown-linux-gnu --build ${{matrix.arch}}-unknown-linux-gnu --prefix $(realpath ../sysroot)
          make -j
          make install
          
      - name: build
        env:
          ALSA_DYNAMIC: ''
          PKG_CONFIG_SYSROOT_DIR: '/'
          PKG_CONFIG_PATH: '/usr/lib/aarch64-linux-gnu/pkgconfig'
          RUSTFLAGS: ${{matrix.rustflags}}
        run: |
          rustup target add ${{matrix.arch}}-${{matrix.target-suffix}}
          cargo build --bin empl --locked --release --target ${{matrix.arch}}-${{matrix.target-suffix}} --verbose
      - name: upload
        uses: actions/upload-artifact@v4
        with:
          name: empl-${{matrix.arch}}-${{matrix.target-suffix}}
          path: ./target/${{matrix.arch}}-${{matrix.target-suffix}}/release/empl${{matrix.executable-suffix}}
